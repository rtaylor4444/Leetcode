//Run Time: 36ms - 90.61%
//Memory Usage: 12.2MB - 5.71%
//Solved =)
//Time O(n) Memory O(w)
/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        if(root == nullptr) return {};
        vector<vector<int>> result;
        queue<Node*> levelOrder;
        levelOrder.push(root);
        while(!levelOrder.empty()) {
            vector<int> curLevel;
            for(int i = levelOrder.size() - 1; i >= 0; --i) {
                Node* curNode = levelOrder.front();
                levelOrder.pop();
                curLevel.push_back(curNode->val);
                for(int j = 0; j < curNode->children.size(); ++j) {
                    levelOrder.push(curNode->children[j]);
                }
            }
            result.push_back(curLevel);
        }
        return result;
    }
};
