//Run Time: 8ms - 80.90%
//Memory Usage: 11.2MB - 76.86%
//Solved =)
//Time O(n) Memory O(n)
/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        //Hashmap node -> copy
        unordered_map<Node*, Node*> nodeToCopy;
        Node* curNode = head;
        while(curNode) {
            nodeToCopy.emplace(curNode, new Node(curNode->val));
            curNode = curNode->next;
        }
        Node* dummyHead = new Node(0);
        curNode = dummyHead;
        while(head) {
            curNode->next = nodeToCopy[head];
            curNode = curNode->next;
            curNode->random = nodeToCopy[head->random];
            head = head->next;
        }
        curNode = dummyHead->next;
        delete dummyHead;
        return curNode;
    }
};
