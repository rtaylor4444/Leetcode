//Run Time: 0ms - 100.00%
//Memory Usage: 6MB - 32.40%
//Solved =)
//Time O(n) Memory O(1)
class Solution {
    int maxLen;
public:
    int countVowelStrings(int n) {
        //Recursion
        //Test all possiblies
        //lexicograph sorted "e" cannot come before "a"
        //as soon as I pick e I cannot pick a anymore
        //Optimized Bottom-up
        maxLen = n;
        vector<vector<int>> dp(5, vector<int>(2, 0));
        //Base Cases - last row is always one
        for(int i = 0; i < 5; ++i) {
            dp[i][n%2] = 1;
        }
        //Calc matrix
        for(int len = n-1; len >= 0; --len) {
            //Pick each letter
            for(int let = 0; let < 5; ++let) {
                //Reference all of our next choices
                dp[let][len%2] = 0;
               for(int i = let; i < 5; ++i) {
                    dp[let][len%2] += dp[i][(len+1)%2];
                } 
            }
        }
        return dp[0][0];
    }
};
