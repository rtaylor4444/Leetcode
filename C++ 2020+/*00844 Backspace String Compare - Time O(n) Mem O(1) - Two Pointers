//Run Time: 0ms - 100.00%
//Memory Usage: 6.1MB - 95.43%
//Solved =)
//Time O(n) Memory O(1)
class Solution {
public:
    bool backspaceCompare(string S, string T) {
        //NO memory loop through boths strings in reverse
        //"ab#c"
        //"ab#c"
        int p1 = S.size() - 1, p2 = T.size() - 1;
        while(p1 >= 0 || p2 >= 0) {
            //Get the get valid character
            int count = 0;
            while(p1 >= 0) {
                //get all chars to skip
                if(S[p1] == '#') {
                    count++;
                    p1--;
                }
                //skip chars
                else if(count > 0) {
                    count--;
                    p1--;
                }
                else 
                    break;
            }
            
            count = 0;
            while(p2 >= 0) {
                if(T[p2] == '#') {
                    count++;
                    p2--;
                }
                else if(count > 0) {
                    count--;
                    p2--;
                }
                else 
                    break;
            }
            //Bounds check
            //both pointers are at the end
            if(p1 < 0 && p2 < 0)
                break;
            //only one pointer at the end - strings arent even
            else if(p1 < 0 || p2 < 0)
                return false;
            
            
            //Check is character are the same
            if(S[p1] != T[p2]) return false;
            p1--;
            p2--;
        }
        return true;
    }
};
