//Run Time: 8ms - 14.65%
//Memory Usage: 9.7MB - 92.56%
//Solved =)
//Time O(n) Memory O(1)
class Solution {
public:
    int firstMissingPositive(vector<int>& nums) {
        //Set all numbers above size, 0s, and negs to 1
        //Check if we find one if not thats our answer
        bool foundOne = false;
        for(int i = 0; i < nums.size(); ++i) {
            if(nums[i] == 1) foundOne = true;
            else if(nums[i] <= 0 || nums[i] > nums.size()) 
                nums[i] = 1;
        }
        if(!foundOne) return 1;
        //Use Array Marking techinque
        for(int i = 0; i < nums.size(); ++i) {
            int index = abs(nums[i]) - 1;
            if(nums[index] > 0) nums[index] *= -1;
        }
        //Loop through and find first non neg or return arr.size
        for(int i = 0; i < nums.size(); ++i) {
            if(nums[i] > 0) return i+1;
        }
        return nums.size()+1;
    }
};
