//Run Time: 20ms - 83.22%
//Memory Usage: 13.3MB - 15.62%
//Unoptimal Solution - Time needs improvement
//n = size of arr1 and arr2
//d = the distance passed in which determines our range
//Time O(n * d) Memory O(1)
class Solution {
public:
    bool isDistanceValue(int num, int d, vector<bool>& count) {
        //Search our range
        for(int j = num - d; j <= num + d; ++j) {
            if(count[2000+j]) return false;
        }
        return true;
    }
    int findTheDistanceValue(vector<int>& arr1, vector<int>& arr2, int d) {
        //Sort array 2
        //Count sort - limit is 2001 - neg are possible
        //two indexes that meet the property
        // arr[i] - d
        // 8 - 2 = 6
        // arr[i] + d
        // 8 + 2 = 10
        vector<bool> arr2ValueLookup(4001, false);
        for(int i = 0; i < arr2.size(); ++i) {
            arr2ValueLookup[2000+arr2[i]] = true;
        }
        
        int numIndices = 0;
        for(int i = 0; i < arr1.size(); ++i) {
            if(isDistanceValue(arr1[i], d, arr2ValueLookup))
                ++numIndices;
        }
        return numIndices;
    }
};
