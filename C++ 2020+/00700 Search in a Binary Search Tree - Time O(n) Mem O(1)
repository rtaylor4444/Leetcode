/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
//Run Time: 68ms - 69.35%
//Memory Usage: 34.9MB - 11.62%
//Solved =)
//Time O(n) Memory O(1)
class Solution {
public:
    TreeNode* searchBST(TreeNode* root, int val) {
        TreeNode* curValue = root;
        while(curValue) {
            if(val > curValue->val)
                curValue = curValue->right;
            else if(val < curValue->val)
                curValue = curValue->left;
            else
                break;
        }
        return curValue;
    }
};
