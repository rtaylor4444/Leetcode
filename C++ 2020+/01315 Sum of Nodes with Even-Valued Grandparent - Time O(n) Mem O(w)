//Run Time: 52ms - 88.45%
//Memory Usage: 38.9MB - 5.29%
//Solved =)
//Time O(n) Memory O(w)
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int totalSum;
public:
    void preOrder(TreeNode* node, TreeNode* parent, TreeNode* grandparent) {
        if(grandparent && grandparent->val % 2 == 0) {
            totalSum += node->val;
        }
        if(node->left) {
            preOrder(node->left, node, parent);
        }
        if(node->right) {
            preOrder(node->right, node, parent);
        }
    }
    int sumEvenGrandparent(TreeNode* root) {
        totalSum = 0;
        preOrder(root, nullptr, nullptr);
        return totalSum;
    }
};
