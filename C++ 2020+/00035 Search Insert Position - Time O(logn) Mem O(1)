//Run Time: 8ms - 92.49%
//Memory Usage: 9.7MB - 57.00%
//Solved =)
//Time O(logn) Memory O(1)
class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        //Binary Search
        if(nums.empty()) return 0;
        int l = 0, r = nums.size() -1, m;
        while(l <= r) {
            m = l + ((r - l)/2);
            //Exit Condition
            if(nums[m] == target)
                return m;
            
            if(nums[m] < target)
                l = m + 1;
            else
                r = m - 1;
        }
        return (nums[m] > target) ? m : m + 1;
    }
};
