//Run Time: 0ms - 100.00%
//Memory Usage: 8.2MB - 27.11%
//Solved =)
//Time O(n) Memory O(n)
class Solution {
public:
    int climbStairs(int n) {
        if(n < 2) return n;
        vector<int> dp(n+1, 0);
        dp[0] = 0;
        dp[1] = 1;
        dp[2] = 2;
        //[0,1]
        //2 = 0 + 2 || 1 + 1
        //[0,1,2]
        //3 = 1 + 2(two 1s or one 2) || 2 + 1 
        //[0,1,2,3]
        //4 
        //1+1+1+1
        //1+1+2
        //1+2+1
        //2+1+1
        //2+2
        //3 - steps covered from 3
        //1+1+1 (1)
        //1+2 (1)
        //2+1 (1)
        //2 - steps covered from 2
        //2 (2)
        //1+1 (2)
        //dp[n] = dp[n-1] + dp[n-2]
        for(int i = 3; i <= n; ++i) {
            dp[i] = dp[i-1] + dp[i-2];
        }
        return dp[n];
    }
};
