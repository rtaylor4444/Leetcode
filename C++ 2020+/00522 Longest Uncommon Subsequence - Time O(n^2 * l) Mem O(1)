//Run Time: 4ms - 59.46%
//Memory Usage: 8.4MB - 71.35%
//Solved =)
//Time O(n^2 * l) Memory O(1)
struct SortLUS {
    bool operator()(string& a, string& b) {
        if(a.size() > b.size()) return true;
        else if(a.size() < b.size()) return false;
        return a.compare(b) < 0;
    }
};
class Solution {
public:
    //is b a subsequence of a
    bool isSubsequence(string& a, string& b) {
        int p1 = 0, p2 = 0;
        while(p1 < a.size() && p2 < b.size()) {
            if(a[p1] == b[p2]) {
                ++p1;
                ++p2;
            }
            else ++p1;
        }
        return p2 == b.size();
    }
    int findLUSlength(vector<string>& strs) {
        sort(strs.begin(), strs.end(), SortLUS());
        for(int i = 0; i < strs.size(); ++i) {
            bool curIsSub = false;
            for(int j = 0; j < strs.size(); ++j) {
                if(i == j) continue;
                curIsSub = isSubsequence(strs[j], strs[i]);
                if(curIsSub) break;
            } 
            if(!curIsSub) return strs[i].size();
        }
        return -1;
    }
};
