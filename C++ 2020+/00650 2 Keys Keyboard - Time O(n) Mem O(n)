//Run Time: 8ms - 51.61%
//Memory Usage: 7.3MB - 16.74%
//Unoptimal Solution - Memory needs improvement
//Time O(n) Memory O(n)
class Solution {
    vector<int> primes, dp;
public:
    Solution() {
        primes = {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,
                  79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,
                  163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,
                  241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,
                  337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,
                  431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,
                  521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,
                  617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,
                  719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,
                  823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,
                  929,937,941,947,953,967,971,977,983,991,997};
        dp = vector<int>(1001, INT_MAX);
        dp[1] = 0;
        for(int i = 0; i < primes.size(); ++i) {
            dp[primes[i]] = primes[i];
        }
        for(int i = 2; i < 1001; ++i) {
            for(int j = i + i; j < 1001; j+=i) {
                dp[j] = dp[i] + (j / i);
            }
        }
    }
    int minSteps(int n) {
        //Two options every step
        //1st step is always copy operation
        //copy size can only increase and not decrease
        //paste then copy
        //states = copy size, charzise
        //Bottom-Up building
        //2 depends on 1, we have to copy then paste 
        //dp[1] = 0; //have it already
        //dp[2] = 2; //copy then paste apply to 4,8,16..
        //dp[3] = dp[2] + 1; // pasted what was in previous
        //dp[4] = 0; // copy 2 and paste it, paste on top of 3
        //dp[5] = 0; // prime number just paste 5 times
        //Formula is n is prime n = n
        //Everything just builds off primes
        //find the prime its divisable by ans is prime + (n / prime);
        return dp[n];
    }
};
