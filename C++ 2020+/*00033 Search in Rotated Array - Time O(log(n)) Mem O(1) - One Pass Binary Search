//Run Time: 4ms - 80.83%
//Memory Usage: 11.1MB - 51.31%
//Solved =)
//Time O(log(n)) Memory O(1)
class Solution {
public:
    int search(vector<int>& nums, int target) {
        int l = 0, r = nums.size() - 1;
        while(l <= r) {
            int m = l + ((r - l) / 2);
            if(nums[m] == target) return m;
            //in order - left part
            if(nums[l] <= nums[m]) {
                //Check if target is within this part
                if(target >= nums[l] && target < nums[m])
                    r=m-1;
                else
                    l=m+1;
            } 
            //in order - right part
            else {
                //Check if target is within this part
                if(target > nums[m] && target <= nums[r])
                    l=m+1;
                else
                    r=m-1;
            }
        }
        return -1;
    }
};
