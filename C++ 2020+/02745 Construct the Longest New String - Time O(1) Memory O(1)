//Run Time: 0ms - 100.00%
//Memory Usage: 5.9MB - 14.41%
//Solved =)
//Time O(1) Memory O(1)

class Solution {
public:
    int longestString(int x, int y, int z) {
        //z can be chained and positioned anywhere assuming no x y
        //Two x's and y's back to back are illegal
        //xz and zy are illegal

        //We need to get rid of x and y whichever one is greater comes first
        //z's should be used to ensure that we don't run into xx or yy
        //x = 2, y = 5, z = 1
        //yxyxyz
        //x = 3, y = 2, z = 2
        //xyxyxzz

        //Interweave xy/yx 
        int strSize = 0, xyRemainder = max(x, y) - min(x, y);
        if(xyRemainder <= 1) return (x+y+z)*2;
        strSize += (min(x,y) * 2) * 2;
        //Cannot interweave z with x or y the remaining ones
        //Include all remaining z's +1 x or y
        strSize += (z*2) + 2;
        return strSize;
    }
};
