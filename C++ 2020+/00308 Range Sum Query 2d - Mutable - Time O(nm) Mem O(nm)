//Run Time: 68ms - 21.33%
//Memory Usage: 12.9MB - 64.69%
//Unoptimal Solution - Time/Memory needs improvement
//Time O(nm) Memory O(nm)
class NumMatrix {
    vector<vector<int>> origMatrix, sumMatrix;
public:
    NumMatrix(vector<vector<int>>& matrix) {
        if(matrix.empty()) return;
        origMatrix = matrix;
        sumMatrix = matrix;
        //Get sum of first row
        for(int j = 1; j < sumMatrix[0].size(); ++j) {
            sumMatrix[0][j] += sumMatrix[0][j-1];
        }
        //Get sum of the first col
        for(int i = 1; i < sumMatrix.size(); ++i) {
            sumMatrix[i][0] += sumMatrix[i-1][0];
        }
        //Get sum of the other rows
        for(int i = 1; i < sumMatrix.size(); ++i) {
            for(int j = 1; j < sumMatrix[i].size(); ++j) {
                sumMatrix[i][j] += sumMatrix[i][j-1] + sumMatrix[i-1][j];
                sumMatrix[i][j] -= sumMatrix[i-1][j-1];
                //cout << sumMatrix[i][j] << " "; 
            }
            //cout << endl;
        }
    }
    
    void update(int row, int col, int val) {
        //Get difference and update original matrix
        int diff = val - origMatrix[row][col];
        origMatrix[row][col] = val;
        //Update sum matrix
        for(int i = row; i < sumMatrix.size(); ++i) {
            for(int j = col; j < sumMatrix[i].size(); ++j) {
                sumMatrix[i][j] += diff;
            }
        }
    }
    
    int sumRegion(int row1, int col1, int row2, int col2) {
        int totalSum = sumMatrix[row2][col2];
        //Deduct extra top sum
        totalSum -= (row1 - 1 >= 0) ? sumMatrix[row1 - 1][col2] : 0;
        //Deduct extra left sum
        totalSum -= (col1 - 1 >= 0) ? sumMatrix[row2][col1 - 1] : 0;
        //Add back top left corner that was deducted twice
        totalSum += (col1 - 1 >= 0 && row1 - 1 >= 0) ? sumMatrix[row1-1][col1-1] : 0;
        return totalSum;
    }
};

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix* obj = new NumMatrix(matrix);
 * obj->update(row,col,val);
 * int param_2 = obj->sumRegion(row1,col1,row2,col2);
 */
