//Run Time: 8ms - 99.96%
//Memory Usage: 10MB - 75.57%
//Solved =)
//Time O(n*m) Memory O(m)
class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        vector<int> dp(grid[0].size(), INT_MAX);
        //Calc sums for each cell
        for(int i = 0; i < grid.size(); ++i) {
            for(int j = 0; j < grid[0].size(); ++j) {
                int leftSum = (j - 1 >= 0) ? dp[j-1] : INT_MAX;
                int minSum = min(leftSum, dp[j]);
                dp[j] = grid[i][j];
                dp[j] += (minSum == INT_MAX) ? 0 : minSum;
            }
        }
        return dp[grid[0].size() - 1];
    }
};
