//Run Time: 88ms - 95.36%
//Memory Usage: 90.3MB - 82.81%
//Solved =)
//Time O(n) Memory O(n)
class Solution {
    vector<int> numbs, original;
public:
    Solution(vector<int>& nums) {
        original = vector<int>(nums);
        numbs = nums;
    }
    
    /** Resets the array to its original configuration and return it. */
    vector<int> reset() {
        numbs = original;
        return numbs;
    }
    
    /** Returns a random shuffling of the array. */
    vector<int> shuffle() {
        for(int i = 0; i < numbs.size(); ++i) {
            int j = rand() % numbs.size();
            swap(numbs[i], numbs[j]);
        }
        return numbs;
    }
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution* obj = new Solution(nums);
 * vector<int> param_1 = obj->reset();
 * vector<int> param_2 = obj->shuffle();
 */
