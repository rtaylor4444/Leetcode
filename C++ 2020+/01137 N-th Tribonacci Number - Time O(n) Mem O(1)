//Run Time: 0ms - 100.00%
//Memory Usage: 8.2MB - 96.12%
//Solved =)
//Time O(n) Memory O(1)
class Solution {
public:
    int tribonacci(int n) {
        //Optimal only need to keep track of three values
        int T0 = 0, T1 = 1, T2 = 1;
        if(n == 0) return T0;
        else if(n == 1) return T1;
        else if(n == 2) return T2;
        //t3 = t0 + t1 + t2 
        int finalValue = 0;
        for(int i = 3; i <= n; ++i) {
            finalValue = T0 + T1 + T2;
            //Shift values over
            T0 = T1;
            T1 = T2;
            T2 = finalValue;
        }
        return finalValue;
    }
};
