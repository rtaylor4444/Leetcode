//Run Time: 90ms - 93.60%
//Memory Usage: 69.4MB - 88.59%
//Solved =)
//Time O(n) Memory O(1)

class Solution {
public:
    int totalFruit(vector<int>& fruits) {
        int numKindsSeen = 0, winStart = 0, maxFruit = 0;
        vector<int> seenFruits(fruits.size(), 0);
        for(int i = 0; i < fruits.size(); ++i) {
            if(seenFruits[fruits[i]]++ == 0) numKindsSeen++;
            while(numKindsSeen > 2) {
                if(--seenFruits[fruits[winStart++]] == 0) numKindsSeen--;
            }
            maxFruit = max(maxFruit, 1 + (i - winStart));
        }
        return maxFruit;
    }
};
