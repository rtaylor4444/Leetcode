//Run Time: 0ms - 100.00%
//Memory Usage: 11.4MB - 5.86%
//Solved =)
//Time O(n) Memory O(h)
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int maxValue;
public:
    void preOrder(TreeNode* node, int maxSoFar, int minSoFar) {
        if(node == nullptr) return;
        maxValue = max(maxValue, abs(node->val - minSoFar));
        maxValue = max(maxValue, abs(node->val - maxSoFar));
        int localMin = min(node->val, minSoFar);
        int localMax = max(node->val, maxSoFar);
        preOrder(node->left, localMax, localMin);
        preOrder(node->right, localMax, localMin);
    }
    int maxAncestorDiff(TreeNode* root) {
        //diff for root only or any node?
        maxValue = 0;
        preOrder(root, root->val, root->val);
        return maxValue;
    }
};
