//Run Time: 204ms - 87.11%
//Memory Usage: 38.5MB - 75.54%
//Solved =)
//Time O(nlogn) Memory O(n)
class Solution {
public:
    vector<int> arrayRankTransform(vector<int>& arr) {
        //Make a copy of the array then sort it
        //[40,10,20,30] => [10,20,30,40]
        //Make a hashmap to map each number to its rank
        //[10,20,30,40] => [1,2,3,4]
        vector<int> sortedArr(arr);
        sort(sortedArr.begin(), sortedArr.end());
        unordered_map<int, int> numToRank;
        int curRank = 1;
        for(int i = 0; i < sortedArr.size(); ++i) {
            if(numToRank.find(sortedArr[i]) == numToRank.end())
                numToRank.emplace(sortedArr[i], curRank++);
        }
        vector<int> ranks(arr.size(), 0);
        for(int i = 0; i < arr.size(); ++i) {
            ranks[i] = numToRank[arr[i]];
        }
        return ranks;
    }
};
