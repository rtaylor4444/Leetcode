//Run Time: 0ms - 100.00%
//Memory Usage: 6.3MB - 5.21%
//Solved =)
//Time O(n) Memory O(1)
class Solution {
public:
    bool detectCapitalUse(string word) {
        //Check first character then iterate through
        //capitals have 5th bit = 32 off
        //After first char either all lower or upper
        //ignoring first char case has to match
        char firstChar = word[0];
        //All case has to match
        for(int i = 1; i < word.size() - 1; ++i) {
            if((word[i] & 32) != (word[i+1] & 32))
                return false;
        } 
        //Handle first char edge cases
        //Can check first and second word since we know all case is the same here
        char secondChar = (word.size() == 1) ? ' ' : word[1];
        if(secondChar == ' ') return true;
        //if first char is lowercase and second char is upper
        if((firstChar & 32)  && ((firstChar ^ secondChar) & 32) != 0)
            return false;
        
        return true;
    }
};
