//Run Time: 8ms - 82.84%
//Memory Usage: 10MB - 11.37%
//Solved =)
//Time O(n^2) Memory O(1)
class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        sort(nums.begin(), nums.end());
        int closestSum = nums[0] + nums[1] + nums[2];
        for(int i = 0; i < nums.size(); ++i) {
            int l = i+1;
            int r = nums.size() - 1;
            while(l<r) {
                int curSum = nums[i] + nums[l] + nums[r];
                if(curSum == target) return curSum;
                if(abs(target - curSum) < abs(target - closestSum))
                    closestSum = curSum;
                
                //Move left or right depending which one is closest
                if(curSum < target) ++l;
                else --r;
            }
        }
        return closestSum;
    }
};
