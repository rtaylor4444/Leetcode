//Run Time: 20ms - 64.22%
//Memory Usage: 7.9MB - 44.65%
//Solved =)
//Time O(n^3) Memory O(1)
class Solution {
public:
    double getArea(vector<int>& p1, vector<int>& p2, vector<int>& p3) {
        return 0.5 * abs(p1[0] * p2[1] + p2[0] * p3[1] + p3[0]*p1[1]
                        - p1[1] * p2[0] - p2[1] * p3[0] - p3[1] * p1[0]);
    }
    double largestTriangleArea(vector<vector<int>>& points) {
        //Brute Force
        double maxArea = 0.0;
        for(int i = 0; i < points.size(); ++i) {
            for(int j = (i+1); j < points.size(); ++j) {
                for(int k = (j+1); k < points.size(); ++k) {
                    maxArea = max(maxArea, getArea(points[i], points[j], points[k]));
                }
            }
        }
        return maxArea;
    }
};
