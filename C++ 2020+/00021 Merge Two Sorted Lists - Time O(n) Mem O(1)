//Run Time: 4ms - 96.72%
//Memory Usage: 15MB - 7.60%
//Solved =)
//Time O(n) Memory O(1)
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode dummyHead;
        ListNode* curNode = &dummyHead;
        while(l1 && l2) {
            if(l1->val < l2->val) {
                curNode->next = l1;
                l1 = l1->next;
            }
            else {
                curNode->next = l2;
                l2 = l2->next;
            }
            curNode = curNode->next;    
        }
        if(l1) curNode->next = l1;
        else if(l2) curNode->next = l2;
        return dummyHead.next;
    }
};
