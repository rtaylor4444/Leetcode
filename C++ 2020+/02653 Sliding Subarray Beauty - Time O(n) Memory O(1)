//Run Time: 601ms - 31.44%
//Memory Usage: 403.5MB - 5.16%
//Solved =)
//Time O(n) Memory O(1)

class Solution {
public:
    int getBeauty(vector<int> numsToFreq, int x) {
        int beauty = 0;
        for(int i = 0; i < 50; ++i) {
            if(numsToFreq[i] == 0) continue;
            x -= numsToFreq[i];
            if(x <= 0) {
                beauty = i - 50;
                break;
            }
        }
        return beauty;
    }

    vector<int> getSubarrayBeauty(vector<int>& nums, int k, int x) {
        vector<int> ans, numsToFreq(101, 0);
        int start = 0;
        for(int end = 0; end < nums.size(); ++end) {
            ++numsToFreq[50 + nums[end]];
            int windowSize = 1+(end-start);
            if(windowSize > k) {
                --numsToFreq[50 + nums[start++]];
                windowSize = 1+(end-start);
            }
            if(windowSize == k) {
                ans.push_back(getBeauty(numsToFreq, x));
            }
        }
        return ans;
    }
};
