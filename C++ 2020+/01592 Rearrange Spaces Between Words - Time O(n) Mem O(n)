//Run Time: 0ms - 100.00%
//Memory Usage: 6.1MB - 100.00%
//Solved =)
//Time O(n) Memory O(n)
class Solution {
public:
    string reorderSpaces(string text) {
        //Loop through count number of spaces and words
        //build newstring with words + spaces/words
        int numSpaces = 0, wordCount = 0;
        char prevChar = ' ';
        for(int i = 0; i < text.size(); ++i) {
            if(text[i] == ' ') {
                ++numSpaces;
            }
            else {
                if(prevChar == ' ') ++wordCount;
            }
            prevChar = text[i];
        }
        //cout << "spaces: " << numSpaces << " word: " << wordCount << endl;
        int spacesReq = (wordCount == 1) ? numSpaces : numSpaces / (wordCount-1);
        string newString, curWord;
        newString.reserve(text.size());
        istringstream stream(text);
        
        while(stream >> curWord) {
            newString += curWord;
            int curSpaces = min(numSpaces, spacesReq);
            for(int i = 0; i < curSpaces; ++i) {
                newString += ' ';
                --numSpaces;
            }
        }
        return newString;
    }
};
