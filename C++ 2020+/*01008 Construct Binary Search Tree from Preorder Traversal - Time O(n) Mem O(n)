//Run Time: 4ms - 89.53%
//Memory Usage: 14.2MB - 7.59%
//Solved =)
//Time O(n) Memory O(n)
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* preorderConstruct(vector<int>& preorder, int& i, int maxValue) {
        if(i >= preorder.size() || preorder[i] > maxValue) return nullptr;
        TreeNode* node = new TreeNode(preorder[i++]);
        node->left = preorderConstruct(preorder, i, node->val);
        node->right = preorderConstruct(preorder, i, maxValue);
        return node;
    }
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        if(preorder.empty()) return nullptr;
        int i = 0;
        return preorderConstruct(preorder, i, INT_MAX);
    }
};
