//Run Time: 0ms - 100.00%
//Memory Usage: 10.6MB - 59.63%
//Solved =)
//Time O(n) Memory O(1)
class Solution {
public:
    int minSubArrayLen(int target, vector<int>& nums) {
        int arrLen = INT_MAX;
        int sum = 0, curStart = 0;
        for(int i = 0; i < nums.size(); ++i) {
            sum += nums[i];
            if(sum >= target) {
                //optimize start position
                while(sum >= target) {
                    sum -= nums[curStart++];
                }
                //Set length and reset sum + start
                arrLen = min(arrLen, (i+1) - (curStart-1));
            }
        }
        return arrLen == INT_MAX ? 0 : arrLen;
    }
};
