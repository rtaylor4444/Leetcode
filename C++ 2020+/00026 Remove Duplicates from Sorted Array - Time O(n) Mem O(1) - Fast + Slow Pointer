//Run Time: 16ms - 92.43%
//Memory Usage: 13.7MB - 77.20%
//Solved =)
//Time O(n) Memory O(1)
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        //Fast - Slow Pointer
        //edit the array pointer by point
        //[1,2,1,1,1,1,2]
        //i: 1
        //j: 6
        //*we let i point to the index that needs to be edited
        //*and let j find the non duplicates
        if(nums.empty()) return 0;
        int i = 0;
        //Start j at 1 since index 0 is always valid
        for(int j = 1; j < nums.size(); j++) {
            //As soon as wee find a non duplicate of nums[i]
            //replace the value
            if(nums[i] != nums[j]) {
                //increment i to point to a duplicate
                //(i and j will be the same if there is no dup)
                ++i;
                nums[i] = nums[j];
            }
        }
        return i + 1;
    }
};
