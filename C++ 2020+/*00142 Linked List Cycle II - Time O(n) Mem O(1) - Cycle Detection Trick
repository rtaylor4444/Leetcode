//Run Time: 8ms - 81.25%
//Memory Usage: 7.6MB - 57.50%
//Solved =)
//Time O(n) Memory O(1)
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        //Fast-Slow pointer
        ListNode *slow = head, *fast = head;
        while(fast && slow) {
            fast = fast->next;
            slow = slow->next;
            //Check if there is no cycle
            if(!fast) return nullptr;
            fast = fast->next;
            if(fast == slow) break;
        }
        if(fast != slow) return nullptr;
        slow = head;
        while(slow != fast) {
            slow = slow->next;
            fast = fast->next;
        }
        return slow;
    }
};
