//Run Time: 12ms - 99.03%
//Memory Usage: 39.1MB - 92.14%
//Solved =)
//Time O(n) Memory O(h)
/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    Node* connect(Node* root) {
        //Assuming perfect tree
        if(!root) return nullptr;
        if(!root->left && !root->right) return root;
        //Set left
        root->left->next = root->right;
        //Set right
        if(root->next) {
            root->right->next = root->next->left;
        }
        connect(root->left);
        connect(root->right);
        return root;
    }
};
