//Run Time: 109ms - 87.88%
//Memory Usage: 90MB - 12.99%
//Solved =)
//Time O(n) Memory O(n)
class Solution {
public:
    int sumOfBeauties(vector<int>& nums) {
        //1st: DP max number forward, min number backward
        //2nd: +1 just check nums[i - 1] < nums[i] < nums[i + 1]
        //3rd: +0 if both fail
        vector<int> maxNum(nums.size(), 0), minNum(nums.size(), 0);
        int maxVal = INT_MIN, minVal = INT_MAX;
        for(int i = 0; i < nums.size(); ++i) {
            maxVal = max(maxVal, nums[i]);
            maxNum[i] = maxVal;
        }
        for(int i = nums.size()-1; i >= 0; --i) {
            minVal = min(minVal, nums[i]);
            minNum[i] = minVal;
        }

        int beautySum = 0;
        for(int i = 1; i < nums.size()-1; ++i) {
            if(maxNum[i-1] < nums[i] and nums[i] < minNum[i+1]) beautySum += 2;
            else if(nums[i-1] < nums[i] and nums[i] < nums[i+1]) ++beautySum;
        }
        return beautySum;
    }
};
