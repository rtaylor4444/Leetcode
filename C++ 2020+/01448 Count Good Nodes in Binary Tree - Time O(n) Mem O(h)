//Run Time: 172ms - 77.07%
//Memory Usage: 88MB - 5.37%
//Solved =)
//Time O(n) Memory O(h)
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int numNodes;
public:
    void preOrder(TreeNode* node, int maxSoFar) {
        if(node->val >= maxSoFar)
            ++numNodes;
        
        maxSoFar = max(maxSoFar, node->val);
        if(node->left) preOrder(node->left, maxSoFar);
        if(node->right) preOrder(node->right, maxSoFar);
    }
    int goodNodes(TreeNode* root) {
        //preorder with max so far
        if(root == nullptr) return 0;
        numNodes = 0;
        preOrder(root, root->val);
        return numNodes;
    }
};
