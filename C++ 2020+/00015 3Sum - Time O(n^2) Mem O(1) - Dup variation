//Run Time: 72ms - 89.65%
//Memory Usage: 19.7MB - 99.86%
//Solved =)
//Time O(n^2) Memory O(1)
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        unordered_set<int> usedNums;
        vector<vector<int>> ans;
        for(int i = 0; i < nums.size(); ++i) {
            if(i != 0 && nums[i-1] == nums[i]) continue;
            int l = i+1, r = nums.size() - 1;
            while(l < r) {
                int sum = nums[i] + nums[l] + nums[r];
                if(sum == 0) {
                    ans.push_back({nums[i], nums[l++], nums[r--]});
                    //avoid duplicates in sorted array
                    while(l < r && nums[l] == nums[l-1]) ++l;
                }
                else if (sum > 0) --r;
                else ++l;
            }
        }
        return ans;
    }
};
