//Run Time: 16ms - 38.73%
//Memory Usage: 11.8MB - 5.86%
//Solved =)
//Time O(n) Memory O(1)
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(head == nullptr) return nullptr;
        ListNode* curNode = head;
        while(curNode->next) {
            //delete until we encount a nodes val diff than ours
            if(curNode->val == curNode->next->val) {
                ListNode* temp = curNode->next;
                curNode->next = temp->next;
                delete temp;
            }
            else curNode = curNode->next;
        }
        return head;
    }
};
