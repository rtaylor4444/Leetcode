//Run Time: 0ms - 100.00%
//Memory Usage: 12.6MB - 85.43%
//Solved =)
//Time O(n) Memory O(n)
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        if(root == nullptr) return {};
        queue<TreeNode*> bfs;
        vector<vector<int>> ans;
        bfs.push(root);
        while(!bfs.empty()) {
            vector<int> levelValues;
            for(int i = bfs.size() - 1; i >= 0; --i) {
                TreeNode* curNode = bfs.front();
                bfs.pop();
                
                levelValues.push_back(curNode->val);
                if(curNode->left) bfs.push(curNode->left);
                if(curNode->right) bfs.push(curNode->right);
            }
            ans.push_back(levelValues);
            levelValues.clear();
        }
        return ans;
    }
};
