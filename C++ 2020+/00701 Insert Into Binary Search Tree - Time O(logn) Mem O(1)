//Run Time: 112ms - 87.68%
//Memory Usage: 60.3MB - 85.11%
//Solved =)
//Time O(logn) Memory O(1)
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* insertIntoBST(TreeNode* root, int val) {
        if(root == nullptr) return new TreeNode(val);
        TreeNode* curNode = root, *prevNode = nullptr;
        while(curNode) {
            prevNode = curNode;
            if(curNode->val > val)
                curNode = curNode->left;
            else
                curNode = curNode->right;
        }
        if(prevNode) {
            if(prevNode->val > val)
                prevNode->left = new TreeNode(val);
            else
                prevNode->right = new TreeNode(val);
        }
        return root;
    }
};
