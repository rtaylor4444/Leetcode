//Run Time: 0ms - 100.00%
//Memory Usage: 5.9MB - 79.86%
//Solved =)
//Time O(n) Memory O(h)
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int getSum(TreeNode* node, int curSum) {
        if(!node) return 0;
        //return our sum on a leaf
        curSum *= 10;
        curSum += node->val;
        if(!node->left && !node->right) return curSum;
        return getSum(node->left, curSum) + getSum(node->right, curSum);
    }
    int sumNumbers(TreeNode* root) {
        return getSum(root, 0);
    }
};
