//Run Time: 16ms - 35.98%
//Memory Usage: 14.5MB - 41.92%
//Unoptimal Solution - Memory needs improvement
//Time O(n^2)) Memory O(n^2)
class Solution {
public:
    double champagneTower(int poured, int query_row, int query_glass) {
        //left = col+1
        //right = col+1 and row+1
        vector<vector<double>> dp(query_row+1, vector<double>(query_row+1, 0.0));
        //base case
        dp[0][0] = poured;
        for(int i = 0; i < query_row+1; ++i) {
            for(int j = 0; j <= i; ++j) {
                double excess = max(0.0, dp[i][j] - 1.0);
                dp[i][j] -= excess;
                //bounds check
                if(i+1 >= query_row+1) continue;
                excess /= 2.0;
                //left
                dp[i+1][j] += excess;
                //right
                dp[i+1][j+1] += excess;
            }
        }
        return dp[query_row][query_glass];
    }
};
