//Run Time: 4ms - 32.97%
//Memory Usage: 9.9MB - 5.39%
//Solved =)
//Time O(n^2) Memory O(1)
class Solution {
public:
    vector<int> powerfulIntegers(int x, int y, int bound) {
        //brute force and check every combination
        //"7 ^ 3 = %f\n", pow (7.0, 3.0)
        vector<int> ans;
        ans.reserve(bound);
        vector<bool> dupCheck(bound, false);
        for(int i = 1; i < bound; i*=x) {
            for(int j = 1; j + i <= bound; j*=y) {
                int curValue = i + j;
                if(dupCheck[curValue])
                    continue;
                
                if(curValue <= bound) {
                    ans.push_back(curValue);
                    dupCheck[curValue] = true;
                }
                if(y == 1) break;
            }
            if(x == 1) break;
        }
        return ans;
    }
};
