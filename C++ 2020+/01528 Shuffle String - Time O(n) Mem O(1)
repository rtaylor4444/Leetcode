//Run Time: 16ms - 73.11%
//Memory Usage: 15.2MB - 96.98%
//Solved =)
//Time O(n) Memory O(1)
class Solution {
public:
    string restoreString(string s, vector<int>& indices) {
        //Swap Values in-place
        //char -> index
        //[4,5,6,7,0,2,1,3]
        // c o d e l e e t
        for(int i = 0; i < s.size(); ++i) {
            //Skip if this element was already placed in proper spot
            if(i == indices[i]) continue;
            int curPos = indices[i];
            //Swap until this letter is in its proper place
            //[0,5,6,7,4,2,1,3]
            // l o d e c e e t
            while(i != curPos) {
                swap(s[i], s[curPos]);
                swap(indices[i], indices[curPos]);
                curPos = indices[i];
            }
        }
        return s;
    }
};
