//Run Time: 304ms - 94.82%
//Memory Usage: 120.3MB - 47.41%
//Solved =)
//Time O(n) Memory O(n)
class Cashier {
    int numBills, discountFreq;
    double discountPercent;
    vector<int> productToPrice;
public:
    Cashier(int n, int discount, vector<int>& products, vector<int>& prices) {
        //product -> price to look them up O(1)
        numBills = 0;
        discountFreq = n;
        discountPercent = (double)discount;
        productToPrice = vector<int>(201, 0);
        for(int i = 0; i < products.size(); ++i) {
            productToPrice[products[i]] = prices[i];
        }
    }
    
    double getBill(vector<int> product, vector<int> amount) {
        double totalBill = 0.0;
        numBills = (numBills + 1) % discountFreq;
        for(int i = 0; i < product.size(); ++i) {
            double curCost = (double)(productToPrice[product[i]] * amount[i]);
            if(numBills == 0) totalBill += (curCost - (discountPercent * curCost) / 100);
            else totalBill += curCost;
        }
        return totalBill;
    }
};

/**
 * Your Cashier object will be instantiated and called as such:
 * Cashier* obj = new Cashier(n, discount, products, prices);
 * double param_1 = obj->getBill(product,amount);
 */
