//Run Time: 4ms - 94.58%
//Memory Usage: 14.2MB - 100.00%
//Solved =)
//Time O(n) Memory O(h)
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int moves;
public:
    int postOrder(TreeNode* node) {
        if(node == nullptr) return 0;
        int leftMoves = postOrder(node->left);
        int rightMoves = postOrder(node->right);
        moves += abs(leftMoves) + abs(rightMoves);
        return node->val - 1 + leftMoves + rightMoves;
    }
    int distributeCoins(TreeNode* root) {
        moves = 0;
        postOrder(root);
        return moves;
    }
};
