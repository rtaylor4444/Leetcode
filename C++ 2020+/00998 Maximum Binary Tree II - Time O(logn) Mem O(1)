//Run Time: 8ms - 45.15%
//Memory Usage: 13.9MB - 32.73%
//Solved =)
//Time O(logn) Memory O(1)
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* insertIntoMaxTree(TreeNode* root, int val) {
        TreeNode* curNode = root, *prevNode = nullptr;
        bool isLeft = true;
        while(curNode && curNode->val > val) {
            prevNode = curNode;
            curNode = curNode->right;
        }
        //Insert this node
        TreeNode* newNode = new TreeNode(val);
        //This node is new head if no prev
        if(!prevNode) {
            newNode->left = root;
            return newNode;
        }
        newNode->left = prevNode->right;
        prevNode->right = newNode;
        return root;
    }
};
