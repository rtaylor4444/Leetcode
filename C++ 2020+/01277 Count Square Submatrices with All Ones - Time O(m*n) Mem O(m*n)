//Run Time: 128ms - 90.24%
//Memory Usage: 26.8MB - 23.05%
//Solved =)
//Time O(m * n) Memory O(m * n)
class Solution {
public:
    int countSquares(vector<vector<int>>& matrix) {
        //Precalculate the square count
        vector<vector<int>> sqCount(matrix.size(), vector<int>(matrix[0].size(), 0));
        int count = 0;
        for(int i = 0; i < matrix.size(); ++i) {
            for(int j = 0; j < matrix[i].size(); ++j) {
                if(!matrix[i][j]) continue;
                int topRight = (i-1 >= 0) ? sqCount[i-1][j] : 0;
                int botLeft = (j-1 >= 0) ? sqCount[i][j-1] : 0;
                int topLeft = (i-1 >= 0 && j-1 >= 0) ? sqCount[i-1][j-1] : 0; 
                sqCount[i][j] = min(botLeft, min(topRight, topLeft)) + 1; 
                //cout << sqCount[i][j] << " ";
                count += sqCount[i][j];
            }
            //cout << endl;
        }
        return count;
    }
};
