//Run Time: 28ms - 69.06%
//Memory Usage: 27.2MB - 51.10%
//Unoptimal Solution - Time needs improvement
//Time O(nlog(n)) Memory O(1)
class Solution {
public:
    int findUnsortedSubarray(vector<int>& nums) {
        //can just sort the array and compare
        //O(nlogn) Time O(1) Mem
        if(nums.size() < 2) return 0;
        vector<int> temp(nums);
        sort(temp.begin(), temp.end());
        int start = nums.size()-1, end = 0;
        for(int i = 0; i < nums.size(); ++i) {
            if(nums[i] != temp[i]) {
                start = i;
                break;
            }
        }
        for(int i = nums.size() - 1; i >= 0; --i) {
            if(nums[i] != temp[i]) {
                end = i;
                break;
            }
        }
        return max(0, end+1 - start);
    }
};
