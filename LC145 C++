/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        stack<TreeNode*> postorder;
        vector<int> solution;
        solution.reserve(4);
        while(root || !postorder.empty()) {
            while(root) {
                if(root->right) postorder.push(root->right);
                postorder.push(root);
                root = root->left;
            }
            
            root = postorder.top();
            postorder.pop();
            if(!postorder.empty() && root->right && root->right == postorder.top()) {
                postorder.pop();
                postorder.push(root);
                root = root->right;
            }
            else {
                solution.push_back(root->val);
                root = NULL;
            }
            
        }
        return solution;
    }
};
